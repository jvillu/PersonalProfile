---
import Layout from '../layouts/Layout.astro';
import BlogCard from '../components/BlogCard.astro';
import fs from 'fs';
import path from 'path';
import matter from 'gray-matter';
import readingTime from 'reading-time';

// Read all markdown files from _posts_es directory (Spanish posts)
const postsDirectory = path.join(process.cwd(), '_posts_es');
const filenames = fs.readdirSync(postsDirectory);

// Parse posts and extract frontmatter
const posts = filenames
  .filter(name => name.endsWith('.md'))
  .map(name => {
    const fullPath = path.join(postsDirectory, name);
    const fileContents = fs.readFileSync(fullPath, 'utf8');
    const { data, content } = matter(fileContents);
    const stats = readingTime(content);
    
    return {
      slug: name.replace('.md', ''),
      title: data.title,
      description: data.description,
      date: data.date,
      tags: data.tags || [],
      categories: data.categories,
      readingTime: stats.text,
      content
    };
  })
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

// Get unique categories and tags for filtering
const allCategories = [...new Set(posts.map(post => post.categories).filter(Boolean))];
const allTags = [...new Set(posts.flatMap(post => post.tags))];
---

<Layout title="Blog en Español - Javier Villullas">
  <div class="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50 to-indigo-100">
    <!-- Header con navegación de idiomas -->
    <header class="bg-white shadow-lg sticky top-0 z-50">
      <div class="container mx-auto px-6 py-4">
        <div class="flex justify-between items-center">
          <div class="flex items-center space-x-4">
            <a href="/" class="text-2xl font-bold text-blue-900 hover:text-blue-700 transition-colors">
              Javier Villullas
            </a>
            <span class="text-gray-400">|</span>
            <h1 class="text-xl font-semibold text-gray-800">Blog en Español</h1>
          </div>
          
          <!-- Language Switcher -->
          <div class="flex items-center space-x-3">
            <a href="/blog" class="px-3 py-1 text-sm border border-gray-300 rounded-full hover:bg-gray-100 transition-colors">
              🇺🇸 English
            </a>
            <span class="px-3 py-1 text-sm bg-blue-100 text-blue-800 border border-blue-300 rounded-full font-medium">
              🇪🇸 Español
            </span>
          </div>
        </div>
      </div>
    </header>

    <main class="container mx-auto px-6 py-12">
      <!-- Hero Section -->
      <div class="text-center mb-16">
        <h2 class="text-5xl font-bold text-gray-900 mb-6 bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
          Insights Técnicos y Experiencias
        </h2>
        <p class="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
          Explorando las últimas tendencias en Azure AI, arquitecturas cloud inteligentes, y desarrollo de software. 
          Compartiendo más de 20 años de experiencia en el mundo de la tecnología.
        </p>
        
        <!-- Stats -->
        <div class="flex justify-center space-x-8 mt-8">
          <div class="text-center">
            <div class="text-2xl font-bold text-blue-600">{posts.length}</div>
            <div class="text-sm text-gray-500">Artículos</div>
          </div>
          <div class="text-center">
            <div class="text-2xl font-bold text-blue-600">{allCategories.length}</div>
            <div class="text-sm text-gray-500">Categorías</div>
          </div>
          <div class="text-center">
            <div class="text-2xl font-bold text-blue-600">{allTags.length}</div>
            <div class="text-sm text-gray-500">Etiquetas</div>
          </div>
        </div>
      </div>

      <!-- Filters Section -->
      <div class="mb-12">
        <div class="bg-white rounded-xl shadow-lg p-6">
          <h3 class="text-lg font-semibold text-gray-800 mb-4">Filtrar por categorías:</h3>
          <div class="flex flex-wrap gap-3">
            <button class="filter-btn active px-4 py-2 rounded-full text-sm font-medium transition-all duration-200" data-category="all">
              Todas
            </button>
            {allCategories.map(category => (
              <button 
                class="filter-btn px-4 py-2 rounded-full text-sm font-medium transition-all duration-200" 
                data-category={category}
              >
                {category === 'desarrollo_ia' ? 'Desarrollo IA' :
                 category === 'arquitectura' ? 'Arquitectura' :
                 category === 'soluciones_cloud' ? 'Soluciones Cloud' :
                 category === 'azure_ia' ? 'Azure IA' :
                 category}
              </button>
            ))}
          </div>
        </div>
      </div>

      <!-- Blog Posts Grid -->
      <div class="grid lg:grid-cols-2 xl:grid-cols-3 gap-8" id="posts-grid">
        {posts.map(post => (
          <div class="post-card" data-category={post.categories}>
            <BlogCard 
              title={post.title}
              description={post.description}
              date={post.date}
              slug={`/blog-es/${post.slug}`}
              tags={post.tags}
              readingTime={post.readingTime}
              categories={post.categories}
            />
          </div>
        ))}
      </div>

      <!-- Empty State -->
      <div id="no-posts" class="hidden text-center py-16">
        <div class="text-gray-400 text-6xl mb-4">📝</div>
        <h3 class="text-xl font-semibold text-gray-600 mb-2">No se encontraron artículos</h3>
        <p class="text-gray-500">Intenta seleccionar una categoría diferente</p>
      </div>

      <!-- Newsletter Signup -->
      <div class="mt-20 bg-gradient-to-r from-blue-600 to-purple-600 rounded-2xl p-8 text-white text-center">
        <h3 class="text-3xl font-bold mb-4">¿Te gusta el contenido?</h3>
        <p class="text-xl mb-6 opacity-90">
          Conecta conmigo en LinkedIn para más insights sobre Azure AI y desarrollo cloud
        </p>
        <div class="flex justify-center space-x-4">
          <a 
            href="https://www.linkedin.com/in/javiervillullas/" 
            target="_blank" 
            rel="noopener noreferrer"
            class="bg-white text-blue-600 px-6 py-3 rounded-full font-semibold hover:bg-gray-100 transition-colors flex items-center space-x-2"
          >
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M16.338 16.338H13.67V12.16c0-.987-.018-2.256-1.378-2.256-1.379 0-1.597 1.077-1.597 2.193v4.341H7.338V7.22h2.518v1.161h.036c.35-.664 1.206-1.378 2.476-1.378 2.652 0 3.14 1.745 3.14 4.015v4.92Zm-13.67 0H2.668V7.22h2.667v9.118ZM4.001 5.925a1.986 1.986 0 1 1 0-3.972 1.986 1.986 0 0 1 0 3.972Z" clip-rule="evenodd"></path>
            </svg>
            <span>Conectar en LinkedIn</span>
          </a>
          <a 
            href="mailto:jvillullas@gmail.com"
            class="border-2 border-white text-white px-6 py-3 rounded-full font-semibold hover:bg-white hover:text-blue-600 transition-colors"
          >
            Contactar
          </a>
        </div>
      </div>
    </main>
  </div>

  <style>
    .filter-btn {
      @apply bg-gray-100 text-gray-600 hover:bg-blue-100 hover:text-blue-700;
    }
    
    .filter-btn.active {
      @apply bg-blue-600 text-white shadow-lg;
    }
    
    .post-card {
      transition: all 0.3s ease;
    }
    
    .post-card.hidden {
      display: none;
    }
  </style>

  <script>
    // Filter functionality
    document.addEventListener('DOMContentLoaded', function() {
      const filterButtons = document.querySelectorAll('.filter-btn');
      const postCards = document.querySelectorAll('.post-card');
      const noPostsMessage = document.getElementById('no-posts');

      filterButtons.forEach(button => {
        button.addEventListener('click', function() {
          const category = this.getAttribute('data-category');
          
          // Update active button
          filterButtons.forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          
          // Filter posts
          let visibleCount = 0;
          postCards.forEach(card => {
            const cardCategory = card.getAttribute('data-category');
            
            if (category === 'all' || cardCategory === category) {
              card.classList.remove('hidden');
              visibleCount++;
            } else {
              card.classList.add('hidden');
            }
          });
          
          // Show/hide no posts message
          if (visibleCount === 0) {
            noPostsMessage.classList.remove('hidden');
          } else {
            noPostsMessage.classList.add('hidden');
          }
        });
      });
    });
  </script>
</Layout>
