---
export interface Props {
  title: string;
  description: string;
  date: string;
  tags: string[];
  categories: string;
  slug: string;
  readingTime: string;
  language?: string; // 'en' | 'es'
  featured_image?: string;
  featured_image_alt?: string;
}

const { 
  title, 
  description, 
  date, 
  tags, 
  categories, 
  slug, 
  readingTime, 
  language = 'en',
  featured_image,
  featured_image_alt = title
} = Astro.props;

// Create full URL for the post
const postUrl = slug.startsWith('/') ? slug : `/${slug}`;

// Format date based on language
const formatDate = (dateString: string, lang: string = 'en') => {
  const locale = lang === 'es' ? 'es-ES' : 'en-US';
  return new Date(dateString).toLocaleDateString(locale, {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// Get localized text
const getLocalizedText = (lang: string) => {
  return {
    readMore: lang === 'es' ? 'Leer MÃ¡s' : 'Read More'
  };
};

const localizedText = getLocalizedText(language);
---

<article class="bg-white rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 overflow-hidden group">
  <!-- Featured Image -->
  {featured_image && (
    <div class="relative overflow-hidden h-48">
      <img 
        src={featured_image} 
        alt={featured_image_alt}
        class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
        loading="lazy"
      />
      <div class="absolute inset-0 bg-gradient-to-t from-black/50 via-transparent to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      <!-- Category Badge on Image -->
      <div class="absolute top-4 left-4">
        <span class="bg-blue-600 text-white text-xs font-semibold px-3 py-1 rounded-full shadow-lg">
          {categories}
        </span>
      </div>
      <!-- Reading Time on Image -->
      <div class="absolute top-4 right-4">
        <span class="bg-black/30 backdrop-blur-sm text-white text-xs font-medium px-2 py-1 rounded-full">
          {readingTime}
        </span>
      </div>
    </div>
  )}
  
  <div class="p-6">
    <!-- Category Badge (if no image) -->
    {!featured_image && (
      <div class="flex items-center justify-between mb-3">
        <span class="bg-blue-100 text-blue-800 text-xs font-semibold px-3 py-1 rounded-full">
          {categories}
        </span>
        <span class="text-gray-500 text-sm">{readingTime}</span>
      </div>
    )}
    
    <!-- Title -->
    <h3 class="text-xl font-bold text-gray-800 mb-3 hover:text-blue-600 transition-colors">
      <a href={postUrl} class="block">
        {title}
      </a>
    </h3>
    
    <!-- Description -->
    <p class="text-gray-600 text-base leading-relaxed mb-4 line-clamp-3">
      {description}
    </p>
    
    <!-- Meta Info -->
    <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
      <time datetime={date}>
        {formatDate(date, language)}
      </time>
    </div>
    
    <!-- Tags -->
    <div class="flex flex-wrap gap-2 mb-4">
      {tags.map((tag) => (
        <span class="bg-gray-100 text-gray-700 text-xs px-2 py-1 rounded-md hover:bg-blue-50 hover:text-blue-700 transition-colors">
          #{tag}
        </span>
      ))}
    </div>
    
    <!-- Read More Button -->
    <a 
      href={postUrl}
      class="inline-flex items-center text-blue-600 hover:text-blue-800 font-semibold transition-colors group"
    >
      {localizedText.readMore}
      <svg class="w-4 h-4 ml-2 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
      </svg>
    </a>
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
